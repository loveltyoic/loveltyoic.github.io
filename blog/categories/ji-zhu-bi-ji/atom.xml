<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 技术笔记 | 大李子的博客]]></title>
  <link href="http://loveltyoic.github.io/blog/categories/ji-zhu-bi-ji/atom.xml" rel="self"/>
  <link href="http://loveltyoic.github.io/"/>
  <updated>2013-11-04T20:28:55+08:00</updated>
  <id>http://loveltyoic.github.io/</id>
  <author>
    <name><![CDATA[李梓赫]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress初体验]]></title>
    <link href="http://loveltyoic.github.io/blog/2013/07/15/shi-yong-octopressxiao-ji/"/>
    <updated>2013-07-15T11:54:00+08:00</updated>
    <id>http://loveltyoic.github.io/blog/2013/07/15/shi-yong-octopressxiao-ji</id>
    <content type="html"><![CDATA[<p><img src="http://farm4.staticflickr.com/3796/9654815358_f792c648fb_c.jpg" alt="alt text" /></p>

<p>最近看到了octopress，刚好是ruby写的，所以没有理由不试一下。</p>

<p>GitHub提供了博客空间的服务。下面就记录一下我在GitHub上部署octopress的过程。</p>

<!-- more -->


<p>开始就是照着<a href="http://octopress.org/docs/">http://octopress.org/docs/</a>上的步骤来呗：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress</span></code></pre></td></tr></table></div></figure></notextile></div>
就是把octopress的程序拷到本地的文件夹octopress里，当然可以随便命名。</p>

<p>接着把路径切换到这个文件夹中。</p>

<p>然后就和rails的程序比较像了,安装必要的gem
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure></notextile></div>
最后安装主题
<code>
rake install
</code>
感觉把博客放到github还是比较方便的：</p>

<p>首先在github新建个仓库，仓库名需要是<code>username.github.com</code>形式的</p>

<p>比如我的用户名是<code>loveltyoic</code>，那么我新建的就是<code>loveltyoic.github.com</code>。</p>

<p>以下就以这个仓库名为例。</p>

<p><code>
rake setup github_pages
</code>
此时会问你github的仓库地址，那么我的就是<code>git@github.com:loveltyoic/loveltyoic.github.com.git</code></p>

<p>按找教程的说法，这个命令会执行6个作用：</p>

<ol>
<li>设置仓库地址</li>
<li>将clone时的远程分支origin改为octopress</li>
<li>然后将第一步的仓库地址设为默认远程分支origin</li>
<li>从master切换为source分支</li>
<li>根据仓库地址设置博客地址</li>
<li>在_deploy文件夹下设置master分支，用于部署</li>
</ol>


<p>稍微解释一下，这个命令会生成一个远程分支origin，其地址就是刚刚输入的仓库地址了，所以这个是可以改的，我之前就是用了https的地址，结果每次都要输入用户名密码，非常麻烦，所以就改成ssh形式的地址。因为我已经设置好了ssh密钥，就可直接push了。</p>

<p>接下来
<code>
rake generate
rake deploy
</code>
这两个命令将生成博客页面，然后将页面拷贝到_deploy文件夹下，并且执行git的<code>add,commit以及push</code>。这样就会在仓库的master分支下产生博客内容了。</p>

<p>最后可以手动将所有源码push到远程仓库的source分支下。</p>

<p>切换到octopress目录
<code>
git add .
git commit -m 'xxx'
git push origin source
</code>
这样一个建立在github上的博客就建好了，接下来就该编辑第一篇博客了，Let&rsquo;s go!</p>

<p>首先说明，所有博客源码都会放在source/_posts文件夹内。
<code>
rake new_post["我的第一篇博客"]
</code>
这样就会生成一个markdown格式的源文件，可以用markdown语法编辑啦，括号内就是文章标题。生成的源文件会有一个文件头，在编译时会产生相应的作用，比如关闭评论，添加分类等。</p>

<p>同样可以添加页面
<code>
rake new_page["xinyemian"]
</code>
这会在source下创建新的文件夹xinyemian，然后在xinyemian下会自动生成<code>index.markdown</code>。
比如为博客添加个“关于我”的页面并放到导航栏中。
首先
<code>
rake new_page["guan-yu-wo"]
</code>
然后编辑<code>source/guan-yu-wo/index.markdown</code>，加入自我介绍。</p>

<p>在source/_includes/custom/下放的是个性化页面的东东，因此编辑其中的navigation.html就可以把这个关于我页面加入到导航里啦。
如下：
```</p>

<ul class="main-navigation">
  <li><a href="/">Blog</a></li>
  <li><a href="/blog/archives">Archives</a></li>
  <li><a href="/guan-yu-wo/">关于我</a></li>
</ul>


<p>```</p>

<p>在写完一篇博客后，就该生成以及发布了。
<code>
rake generate
rake preview
</code>
首先生成文章页面</p>

<p>然后是在本地预览，会启动一个web服务，用浏览器打开<a href="http://localhost:4000">http://localhost:4000</a>可以预览</p>

<p>如果没有问题，就可以部署到github上了。
<code>
rake deploy
</code>
部署过后，访问<a href="http://loveltyoic.github.com">http://loveltyoic.github.com</a>，可以看到博客已经更新了。</p>

<p>以上都是最基本的操作了，随着使用慢慢探索吧。</p>

<p>对了，还有个比较重要的内容就是配置文件。</p>

<p>暂时用到的就是根目录下的_config.yml</p>

<p>可以配置博客标题以及附标题，作者等等，根据注释可以大概看懂。</p>
]]></content>
  </entry>
  
</feed>
